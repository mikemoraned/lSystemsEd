// Generated by CoffeeScript 1.6.3
(function() {
  var Forward, Model, Nested,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Forward = (function() {
    function Forward() {
      this.accept = __bind(this.accept, this);
    }

    Forward.prototype.accept = function(visitor) {
      return visitor.visitForward(1.0);
    };

    return Forward;

  })();

  Nested = (function() {
    function Nested(nested) {
      this.nested = nested;
      this.accept = __bind(this.accept, this);
    }

    Nested.prototype.accept = function(visitor) {
      return visitor.visitNested(this.nested);
    };

    return Nested;

  })();

  Model = (function() {
    function Model(spec) {
      var _this = this;
      if (spec == null) {
        spec = "L";
      }
      this.commands = {};
      this.commands["L"] = new Forward();
      this.spec = ko.observable(spec);
      this.evaluated = ko.computed(function() {
        return new Nested(_this.spec().split("").map(function(i) {
          return _this.commands[i];
        }));
      });
    }

    return Model;

  })();

  window.Model = Model;

}).call(this);

/*
//@ sourceMappingURL=Model.map
*/
